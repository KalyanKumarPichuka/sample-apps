schema doc {

    field language type string {
        indexing: "en" | set_language
    }

    document doc {

        field path type string {
            indexing: summary | index
        }

        field title type string {
            indexing: summary | index
            index: enable-bm25
            stemming: best
        }

        field content type string {
            indexing: summary | index
            summary: dynamic
            index: enable-bm25
            stemming: best
        }

        # e.g. open, cloud
        field namespace type string {
            indexing: summary | attribute
        }

        field outlinks type array<string> {
            indexing: summary | index
        }

        field inlinks type weightedset<string> {
            indexing: summary | attribute
        }

        field term_count type int {
            indexing: summary | attribute
        }

        field last_updated type int {
            indexing: summary | attribute
        }
        
    }

    fieldset default {
        fields: title, content
    }

    rank-profile documentation inherits default {
        rank-properties {
            $titleWeight: 2.0
            $contentsWeight: 1.0
        }
        first-phase {
            expression: query(titleWeight) * bm25(title) + query(contentsWeight) * bm25(content)
        }
        summary-features {
            attribute(namespace)
            query(titleWeight)
            query(contentsWeight)
            fieldMatch(title)
            fieldMatch(content)
            fieldMatch(content).matches
            fieldLength(title)
            fieldLength(content)
            bm25(title)
            bm25(content)
        }
    }

    rank-profile inlinks {
        first-phase {
            expression: attribute(inlinks).count
        }
    }

    rank-profile inlinks_termcount {
        first-phase {
            expression: attribute(inlinks).count * if(isNan(attribute(term_count)), 0, attribute(term_count))   # Avoid "relevance": "-Infinity"
        }
    }

}
