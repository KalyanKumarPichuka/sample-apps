shared:
  settings:
    email:
      addresses: [kraune@yahooinc.com]
      statuses: [SUCCESS, FAILURE]

jobs:
  link-checker-sample-apps:
    requires: [~pr, ~commit]
    image: ruby:2.6
    environment:
      USER_SHELL_BIN: bash
    steps:
      - install: |
          gem install bundler
          export LANG=C.UTF-8
          bundle install
      - add-front-matter-and-build: |
          find . -not -path './_site/*' -name \*.md | while read f; do (echo -e "---\n---\n"; cat ${f})>${f}.new; mv ${f}.new ${f}; done
          bundle exec jekyll build
      - check-links: |
          bundle exec htmlproofer \
            --assume-extension --empty-alt-ignore \
            --typhoeus-config '{"connecttimeout": 10, "timeout": 30}' \
            --directory-index-file README.html \
            --url-ignore 'src/main/application/schemas/wiki.sd#L80,/localhost:8080/,src/main/application/search/query-profiles' \
            --file-ignore '/tensor-playground/src/main/resources/playground/,/src/main/resources/site/index.html/,/dense-passage-retrieval-with-ann/src/main/resources/frontend/index.html/' \
            --url-swap 'README.md:README.html,Code-of-Conduct.md:Code-of-Conduct.html,document-ranking.md:document-ranking.html,passage-ranking.md:passage-ranking.html,colbert-performance-scaling.md:colbert-performance-scaling.html,experiment-yourself.md:experiment-yourself.html,feeding.md:feeding.html' \
            _site

  build-apps:
    requires: [~pr, ~commit]
    image: vespaengine/vespa-pipeline
    steps:
      - build: |
          set -e
          source /etc/profile.d/jdk-env.sh
          mvn -V --batch-mode --no-snapshot-updates install

  verify-guides:
    requires: [~commit]
    secrets:
      - VESPA_TEAM_API_KEY
    image: vespaengine/vespa-pipeline
    environment:
      USER_SHELL_BIN: bash
    annotations:
      screwdriver.cd/cpu: TURBO
      screwdriver.cd/ram: TURBO
      screwdriver.cd/dockerEnabled: true
      screwdriver.cd/dockerCpu: TURBO
      screwdriver.cd/dockerRam: TURBO
    steps:
      - install-deps: |
          source /etc/profile.d/jdk-env.sh
          export PATH="$JAVA_HOME/bin:$PATH"
          yum install -y python36-pip
          python3 -m pip install -qqq --upgrade pip
          python3 -m pip install -qqq -r test/requirements.txt --user
          yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
          yum install -y zstd unzip
          yum install -y docker-ce docker-ce-cli containerd.io openssl yum-utils
          yum -y install --setopt=skip_missing_names_on_install=False \
            rh-maven35 libxml2-devel rh-ruby27 rh-ruby27-rubygems-devel rh-ruby27-ruby-devel \
            rh-ruby27-rubygem-net-telnet devtoolset-9-gcc-c++
          source /opt/rh/rh-ruby27/enable
          source /opt/rh/devtoolset-9/enable
          #Install git 2.9 since CentOs Image has old git 1.8 which brew install routine will not accept
          yum -y install autoconf cpio curl-devel expat-devel gcc gettext-devel make openssl-devel perl-ExtUtils-MakeMaker zlib-devel wget
          yum -y remove git git-*
          rm /usr/local/git/bin/*
          rm /usr/bin/git*
          wget -O v2.9.0.tar.gz https://github.com/git/git/archive/v2.9.0.tar.gz
          tar -xzvf ./v2.9.0.tar.gz
          cd git-2.9.0/
          make configure
          ./configure --prefix=/usr/local/git
          make && make install
          ln -sv /usr/local/git/bin/* /usr/bin/
          git --version
          #Install brew to get vespa-cli 
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew install vespa-cli 
          vespa help
      - run-tests: |
          export VESPA_TEAM_API_KEY
          cd $SD_DIND_SHARE_PATH
          $SD_SOURCE_DIR/test/test.py -c $SD_SOURCE_DIR/test/_test_config.yml
