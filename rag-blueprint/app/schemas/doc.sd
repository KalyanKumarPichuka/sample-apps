# Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.
schema doc {

    document doc {

        field id type string {
            indexing: summary | attribute
        }

        field title type string {
            indexing: index | summary
            index: enable-bm25
        }

        field text type string {
            
        }

        field created_timestamp type int {
            indexing: attribute | summary
        }
        field modified_timestamp type int {
            indexing: attribute | summary
        }
        
        field last_opened_timestamp type int {
            indexing: attribute | summary
        }
        field open_count type int {
            indexing: attribute | summary
        }
        field favorite type bool {
            indexing: attribute | summary
        }

    }

    field title_embedding type tensor<int8>(x[96]) {
        indexing: input title | embed | pack_bits | attribute | index
        attribute {
            distance-metric: hamming
        }
    }

    field chunks type array<string> {
        indexing: input text | chunk fixed-length 1024 | summary | index
        index: enable-bm25
        summary {
            select-elements-by: top_3_chunk_sim_scores
        }
    }

    field chunk_embeddings type tensor<int8>(chunk{}, x[96]) {
        indexing: input text | chunk fixed-length 1024 | embed | pack_bits | attribute | index
        attribute {
            distance-metric: hamming
        }
    }

    fieldset default {
        fields: title, chunks
    }

    rank-profile match-only {
        inputs {
            query(embedding) tensor<int8>(x[96])
        }
    }

    rank-profile collect-training-data {
        match-features: bm25(title) bm25(chunks) closeness(title_embedding) closeness(chunk_embeddings) max_chunk_sim_scores max_chunk_text_scores avg_top_3_chunk_sim_scores avg_top_3_chunk_text_scores
        inputs {
            query(embedding) tensor<int8>(x[96])
        }

        rank chunks {
            element-gap: 0 # Fixed length chunking should not cause any positional gap between elements
        }
        function chunk_text_scores() {
            expression: elementwise(bm25(chunks),chunk,float)
        }

        function chunk_dist_scores() {
            expression: reduce(hamming(query(embedding), attribute(chunk_embeddings)), sum, x)
        }

        function chunk_sim_scores() {
            expression: 1/ (1 + chunk_dist_scores())
        }

        function top_3_chunk_text_scores() {
            expression: top(3, chunk_text_scores())
        }

        function top_3_chunk_sim_scores() {
            expression: top(3, chunk_sim_scores())
        }


        function avg_top_3_chunk_text_scores() {
            expression: reduce(top_3_chunk_text_scores(), avg, chunk)
        }
        function avg_top_3_chunk_sim_scores() {
            expression: reduce(top_3_chunk_sim_scores(), avg, chunk)
        }
        
        function max_chunk_text_scores() {
            expression: reduce(chunk_text_scores(), max, chunk)
        }

        function max_chunk_sim_scores() {
            expression: reduce(chunk_sim_scores(), max, chunk)
        }

        first-phase {
            expression {
                closeness(title_embedding) +
                closeness(chunk_embeddings) +
                bm25(title) + 
                bm25(chunks) +
                max_chunk_sim_scores() +
                max_chunk_text_scores()
            }
        }

        second-phase {
            expression: random
        }

        
    }

    rank-profile learned-linear inherits collect-training-data {
        match-features: 
        inputs {
            query(embedding) tensor<int8>(x[96])
        }
        first-phase {
            expression {
                # Model Coefficients (trained on full data):
                # ----------------------------------------
                # bm25(chunks)                  : -0.0172
                # bm25(title)                   : 0.5504
                # closeness(chunk_embeddings)   : -0.0005
                # closeness(title_embedding)    : -0.0029
                # max_chunk_sim_scores          : -0.0005
                # max_chunk_text_scores         : 0.7143
                # Intercept                     : -3.5974
                -3.5974 -0.0029 * closeness(title_embedding) -
                0.0005 * closeness(chunk_embeddings) +
                0.5504 * bm25(title) -
                0.0172 * bm25(chunks) -
                0.0005 * max_chunk_sim_scores() +
                0.7143 * max_chunk_text_scores()
            }
        }

        summary-features {
            top_3_chunk_sim_scores
            top_3_chunk_text_scores
            avg_top_3_chunk_sim_scores
            avg_top_3_chunk_text_scores
            max_chunk_sim_scores
            max_chunk_text_scores
        }
        
    }

    

}
